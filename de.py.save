import numpy as np
import cv2
import time
import serial

try:
    ser = serial.Serial('/dev/ttyUSB0', 9600)
    ser.flushInput()
    print ("arduino connected")

    cap = cv2.VideoCapture(0)

    i = 0
    fistTime = 0

    while (True):
        # Capture frame-by-frame
        ret, frame = cap.read()

        if i < 10:
            i = i + 1
        elif i >= 10:
            if fistTime == 0:
                cv2.imwrite('image.png', frame)
                firstTime = 1
                break

    # When everything done, release the capture
    cap.release()

    original = cv2.imread('image.png', 0)
    w, h = original.shape[:2]
    print(w, h)

    cap = cv2.VideoCapture(0)

    ReadOrWrite = 0

    while (True):
        if (ReadOrWrite == 0):
            if ser.inWaiting() > 0:
                data = ord(ser.read())
                #print(data)
                if (data == 49):
                    ReadOrWrite = 1
                else:
                    ReadOrWrite = 0
                    data = 48


        # Capture frame-by-frame
        ret, frame = cap.read()
        w1, h1 = frame.shape[:2]

        gray = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)
        gray = cv2.GaussianBlur(gray, (21, 21), 0)
        diff = cv2.absdiff(original, gray)

        # diff[diff <= 50] = 0
        # diff[diff > 50] = 255

        ret, thresh = cv2.threshold(diff, 50, 255, 0)

        im2, contours, hierarchy = cv2.findContours(thresh.copy(), cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)

        if len(contours) > 0:

            M = cv2.moments(im2)

            c = max(contours, key=cv2.contourArea)
            xMax, yMax, wMax, hMax = cv2.boundingRect(c)

            area = cv2.contourArea(c)

            if (area > 10000):
                cv2.drawContours(frame, c, -1, (0, 255, 0), 3)
                cv2.rectangle(frame, (xMax, yMax), (xMax + wMax, yMax + hMax), (255, 0, 0), 2)
                # print(M)
                if (M['m00']):
                    cx = int(M['m10'] / M['m00'])
                    cy = int(M['m01'] / M['m00'])
                    cv2.circle(frame, (cx, cy), 10, (0, 0, 255), -1)
                    if area > 45000 and area < 65000:
                        ser.write('y'.encode())
                        cv2.putText(frame, "tin", (cx - 25, cy - 25), cv2.FONT_HERSHEY_COMPLEX, 0.5, (255, 255, 255), 2)
                        cv2.putText(frame, str(area), (cx - 50, cy - 50), cv2.FONT_HERSHEY_COMPLEX, 0.5, (255, 255, 255), 2)
                        if ReadOrWrite==1:
                            if data == 49:
                                ser.write('1'.encode())
                                ReadOrWrite = 0
                                data = 48
                                #time.sleep(1)
                    elif area > 65000 and area < 80000:
                        ser.write('y'.encode())
                        cv2.putText(frame, "bottle", (cx - 25, cy - 25), cv2.FONT_HERSHEY_COMPLEX, 0.5, (255, 255, 255), 2)
                        cv2.putText(frame, str(area), (cx - 50, cy - 50), cv2.FONT_HERSHEY_COMPLEX, 0.5,
                                    (255, 255, 255), 2)
                        if ReadOrWrite==1:
                            if data == 49:
                                ser.write('0'.encode())
                                ReadOrWrite = 0
                                data = 48
                                #time.sleep(1)
                                # print('0')
                    else:
                        ser.write('n'.encode())
                else:
                    ser.write('n'.encode())
                    cx = 0
                    cy = 0
	
        else:
            ser.write('n'.encode())
            print("Sorry no contours here")

        cv2.imshow('frame', frame)
       # cv2.imshow('a', a)
        # cv2.imshow('blur', blur)
        # cv2.imshow('gray', gray)
        # cv2.imshow('thresh', thresh)
        if cv2.waitKey(1) & 0xFF == ord('q'):
            break

    cv2.waitKey(0)
    cv2.destroyAllWindows()

except:
    print ("arduino not connected")

